pipeline{
    agent any
    environment{
        tag = "${BUILD_NUMBER}"
    }
    stages{
        stage("Docker build"){
            steps{
                echo "======== Starting Docker Build ========"
                withCredentials([string(credentialsId: 'docker-hub', variable: 'docker_pass')]) {
                    sh 'docker login -u ajit4 -p "${docker_pass}"'
                    sh 'docker build -t ajit4/jenkins-k8s:"${tag}" .'
                }
            }
            post{
                success{
                    echo "========Docker Build successfully========"
                }
                failure{
                    echo "========Docker Build failed========"
                }
            }
        }
        stage("Image push to docker hub"){
            steps{
                echo "======== Pushing image to registry ========"
                sh 'docker push ajit4/jenkins-k8s:"${tag}"'
            }
            post{
                success{
                    echo "========Image push successfully========"
                }
                failure{
                    echo "========Image push  failed========"
                }
            }
        }
        stage("deploy to k8s"){
            steps{
                kubernetesDeploy configs: 'k8s.yml', 
                kubeConfig: [path: '/home/ubunut/.kube/config'], 
                kubeconfigId: 'kubernates', 
                secretName: '', 
                ssh: [sshCredentialsId: 'minikube-server', 
                sshServer: '192.168.0.106'], 
                textCredentials: [certificateAuthorityData: '/home/ubuntu/.minikube/ca.crt', 
                clientCertificateData: '/home/ubuntu/.minikube/profile/minikube/clinet.crt', 
                clientKeyData: '/home/ubuntu/.minikube/profile/minikube/clinet.key', 
                serverUrl: 'https://192.168.49.2:8443']
                
            }
           
        }

    }
    post{
        always{
            echo "========always========"
            cleanWs()
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}
